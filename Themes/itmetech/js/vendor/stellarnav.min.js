/*
 * Stellarnav.js 2.6.0
 * Responsive, lightweight, multi-level dropdown menu.
 * Copyright (c) 2018 Vinny Moreira - http://vinnymoreira.com
 * Released under the MIT license
 */
window.mobileAndTabletcheck = function() {
  var check = false;
  (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
  return check;
};

!function(factory){"use strict";"function"==typeof define&&define.amd?define(["jquery"],factory):"object"==typeof module&&module.exports?module.exports=factory(require("jquery")):jQuery&&!jQuery.fn.hoverIntent&&factory(jQuery)}(function($){"use strict";var cX,cY,_cfg={interval:100,sensitivity:6,timeout:0},INSTANCE_COUNT=0,track=function(ev){cX=ev.pageX,cY=ev.pageY},compare=function(ev,$el,s,cfg){if(Math.sqrt((s.pX-cX)*(s.pX-cX)+(s.pY-cY)*(s.pY-cY))<cfg.sensitivity)return $el.off(s.event,track),delete s.timeoutId,s.isActive=!0,ev.pageX=cX,ev.pageY=cY,delete s.pX,delete s.pY,cfg.over.apply($el[0],[ev]);s.pX=cX,s.pY=cY,s.timeoutId=setTimeout(function(){compare(ev,$el,s,cfg)},cfg.interval)};$.fn.hoverIntent=function(handlerIn,handlerOut,selector){var instanceId=INSTANCE_COUNT++,cfg=$.extend({},_cfg);$.isPlainObject(handlerIn)?(cfg=$.extend(cfg,handlerIn),$.isFunction(cfg.out)||(cfg.out=cfg.over)):cfg=$.isFunction(handlerOut)?$.extend(cfg,{over:handlerIn,out:handlerOut,selector:selector}):$.extend(cfg,{over:handlerIn,out:handlerIn,selector:handlerOut});var handleHover=function(e){var ev=$.extend({},e),$el=$(this),hoverIntentData=$el.data("hoverIntent");hoverIntentData||$el.data("hoverIntent",hoverIntentData={});var state=hoverIntentData[instanceId];state||(hoverIntentData[instanceId]=state={id:instanceId}),state.timeoutId&&(state.timeoutId=clearTimeout(state.timeoutId));var mousemove=state.event="mousemove.hoverIntent.hoverIntent"+instanceId;if("mouseenter"===e.type){if(state.isActive)return;state.pX=ev.pageX,state.pY=ev.pageY,$el.off(mousemove,track).on(mousemove,track),state.timeoutId=setTimeout(function(){compare(ev,$el,state,cfg)},cfg.interval)}else{if(!state.isActive)return;$el.off(mousemove,track),state.timeoutId=setTimeout(function(){!function(ev,$el,s,out){delete $el.data("hoverIntent")[s.id],out.apply($el[0],[ev])}(ev,$el,state,cfg.out)},cfg.timeout)}};return this.on({"mouseenter.hoverIntent":handleHover,"mouseleave.hoverIntent":handleHover},cfg.selector)}});
!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?module.exports=t():e.debounce=t()}(this,function(){"use strict";return function(e,t){var n;return function(){var o=this,i=arguments;clearTimeout(n),n=setTimeout(function(){e.apply(o,i)},t)}}});

(function($) {
	$.fn.stellarNav = function(options, width, breakpoint) {

		var $nav, $width, $breakpoint, $parentItems, isDesktop;
		nav = $(this);
		width = $(window).width();

		// default settings
		var settings = $.extend( {
			theme: 'plain', // adds default color to nav. (light, dark)
			breakpoint: 768, // number in pixels to determine when the nav should turn mobile friendly
			menuLabel: 'Menu', // label for the mobile nav
			sticky: false, // makes nav sticky on scroll (desktop only)
			position: 'static', // 'static', 'top', 'left', 'right' - when set to 'top', this forces the mobile nav to be placed absolutely on the very top of page
			openingSpeed: 250, // how fast the dropdown should open in milliseconds
			closingDelay: 250, // controls how long the dropdowns stay open for in milliseconds
			showArrows: true, // shows dropdown arrows next to the items that have sub menus
			phoneBtn: '', // adds a click-to-call phone link to the top of menu - i.e.: "18009084500"
			phoneLabel: 'Call Us', // label for the phone button
			locationBtn: '', // adds a location link to the top of menu - i.e.: "/location/", "http://site.com/contact-us/"
			locationLabel: 'Location', // label for the location button
			closeBtn: false, // adds a close button to the end of nav
			closeLabel: 'Close', // label for the close button
			mobileMode: false,
			scrollbarFix: false // fixes horizontal scrollbar issue on very long navs
		}, options );

		return this.each( function() {
			nav.children("ul").addClass('level1');
			// defines black or white themes
			if (settings.theme == 'light' || settings.theme == 'dark') {
				nav.addClass(settings.theme);
			}

			if (settings.breakpoint) {
				breakpoint = settings.breakpoint;
			}

			if (settings.menuLabel) {
				menuLabel = settings.menuLabel;
			} else {
				menuLabel = '';
			}

			if (settings.phoneLabel) {
				phoneLabel = settings.phoneLabel;
			} else {
				phoneLabel = '';
			}

			if (settings.locationLabel) {
				locationLabel = settings.locationLabel;
			} else {
				locationLabel = '';
			}

			if (settings.closeLabel) {
				closeLabel = settings.closeLabel;
			} else {
				closeLabel = '';
			}

			// css classes for main menu mobile buttons
			if( settings.phoneBtn && settings.locationBtn ) {
				var cssClass = 'third';
			} else if( settings.phoneBtn || settings.locationBtn ) {
				var cssClass = 'half';
			} else {
				var cssClass = 'full';
			}

			// adds the toggle button to open and close nav
			if ( settings.position == 'right' || settings.position == 'left' ) {
				nav.prepend('<a href="#" class="menu-toggle"><span class="bars"><span></span><span></span><span></span></span> ' + menuLabel + '</a>');
			} else {
				nav.prepend('<a href="#" class="menu-toggle ' + cssClass + '"><span class="menu-icon"></span><span class="menu-label">' + menuLabel + '</span></a>');
			}

			// adds a click-to-call link
			if (settings.phoneBtn && !(settings.position == 'right' || settings.position == 'left')) {
				var btn = '<a href="tel:'+ settings.phoneBtn +'" class="call-btn-mobile ' + cssClass + '"><svg id="icon-phone"></svg> <span>' + phoneLabel + '</span></a>';
				nav.find('a.menu-toggle').after(btn);
			}

			// adds a location page link to the beginning of nav
			if (settings.locationBtn && !(settings.position == 'right' || settings.position == 'left')) {
				var btn = '<a href="'+ settings.locationBtn +'" class="location-btn-mobile ' + cssClass + '" target="_blank"><svg id="icon-location"></svg> <span>' + locationLabel + '</span></a>';
				nav.find('a.menu-toggle').after(btn);
			}

			// Makes nav sticky on scroll
			if (settings.sticky) {
				navPos = nav.offset().top;
				if(width >= breakpoint) {
					$(window).on('scroll', function() {
		         if ($(window).scrollTop() > navPos) {
		             nav.addClass('fixed');
		         }
		         else {
		             nav.removeClass('fixed');
		         }
			    });
				}
			}

			if (settings.position == 'top') {
				nav.addClass('top');
			}

			if (settings.position == 'left' || settings.position == 'right') {
				var closeBtn = '<a href="#" class="close-menu ' + cssClass + '"><span class="icon-close"></span>' + closeLabel + '</a>';
				var phoneBtn = '<a href="tel:'+ settings.phoneBtn +'" class="call-btn-mobile ' + cssClass + '"><svg id="icon-phone"></svg></a>';
				var locationBtn = '<a href="'+ settings.locationBtn +'" class="location-btn-mobile ' + cssClass + '" target="_blank"><svg id="icon-location"></svg></i></a>';

				nav.find('ul:first').prepend(closeBtn);

				if (settings.locationBtn) {
					nav.find('ul:first').prepend(locationBtn);
				}
				if (settings.phoneBtn) {
					nav.find('ul:first').prepend(phoneBtn);
				}
			}

			if (settings.position == 'right') {
				nav.addClass('right');
			}

			if (settings.position == 'left') {
				nav.addClass('left');
			}

			if (!settings.showArrows) {
				nav.addClass('hide-arrows');
			}

			if (settings.closeBtn && !(settings.position == 'right' || settings.position == 'left')) {
				// adds a link to end of nav to close it
				nav.find('ul:first').append('<li><a href="#" class="close-menu"><span class="icon-close"></span> ' + closeLabel + '</a></li>');
			}

			if (settings.scrollbarFix) {
				$('body').addClass('stellarnav-noscroll-x');
			}

			// svg graphics
			// phone icon
			var phoneIcon = document.getElementById('icon-phone'); // Gets phone icon element
			if( phoneIcon ) {
				phoneIcon.setAttribute('viewBox','0 0 480 480');
				var newPhoneIcon = document.createElementNS("http://www.w3.org/2000/svg", 'path'); // Create a path in SVG's namespace
				newPhoneIcon.setAttribute('d','M340.273,275.083l-53.755-53.761c-10.707-10.664-28.438-10.34-39.518,0.744l-27.082,27.076 c-1.711-0.943-3.482-1.928-5.344-2.973c-17.102-9.476-40.509-22.464-65.14-47.113c-24.704-24.701-37.704-48.144-47.209-65.257     c-1.003-1.813-1.964-3.561-2.913-5.221l18.176-18.149l8.936-8.947c11.097-11.1,11.403-28.826,0.721-39.521L73.39,8.194 C62.708-2.486,44.969-2.162,33.872,8.938l-15.15,15.237l0.414,0.411c-5.08,6.482-9.325,13.958-12.484,22.02     C3.74,54.28,1.927,61.603,1.098,68.941C-6,127.785,20.89,181.564,93.866,254.541c100.875,100.868,182.167,93.248,185.674,92.876 c7.638-0.913,14.958-2.738,22.397-5.627c7.992-3.122,15.463-7.361,21.941-12.43l0.331,0.294l15.348-15.029     C350.631,303.527,350.95,285.795,340.273,275.083z'); // Sets path's data
				phoneIcon.appendChild(newPhoneIcon);
			}

			// location icon
			var locationIcon = document.getElementById('icon-location'); //Gets phone icon element
			if( locationIcon ) {
				locationIcon.setAttribute('viewBox','0 0 480 480');
				var newLocationIcon = document.createElementNS("http://www.w3.org/2000/svg", 'path'); // Create a path in SVG's namespace
				newLocationIcon.setAttribute('d','M322.621,42.825C294.073,14.272,259.619,0,219.268,0c-40.353,0-74.803,14.275-103.353,42.825 c-28.549,28.549-42.825,63-42.825,103.353c0,20.749,3.14,37.782,9.419,51.106l104.21,220.986   c2.856,6.276,7.283,11.225,13.278,14.838c5.996,3.617,12.419,5.428,19.273,5.428c6.852,0,13.278-1.811,19.273-5.428 c5.996-3.613,10.513-8.562,13.559-14.838l103.918-220.986c6.282-13.324,9.424-30.358,9.424-51.106 C365.449,105.825,351.176,71.378,322.621,42.825z M270.942,197.855c-14.273,14.272-31.497,21.411-51.674,21.411 s-37.401-7.139-51.678-21.411c-14.275-14.277-21.414-31.501-21.414-51.678c0-20.175,7.139-37.402,21.414-51.675 c14.277-14.275,31.504-21.414,51.678-21.414c20.177,0,37.401,7.139,51.674,21.414c14.274,14.272,21.413,31.5,21.413,51.675 C292.355,166.352,285.217,183.575,270.942,197.855z'); // Sets path's data
				locationIcon.appendChild(newLocationIcon);
			}

			var resetTriggers = function() {
				$(nav).find('.dd-toggle').removeAttr('style');
				nav.find('li').off('mouseenter');
				nav.find('li').off('mouseleave');
				nav.find('li').off('mouseover');
				$('.menu-toggle, .stellarnav-open').off('mouseover');
				$('.menu-toggle, .stellarnav-open').unbind('mouseenter').unbind('mouseleave');
				$('.menu-toggle, .stellarnav-open').off('click');
				$('.menu-toggle, .stellarnav-open').removeProp('hoverIntent_t');
				$('.menu-toggle, .stellarnav-open').removeProp('hoverIntent_s');
				nav.find('li .dd-toggle').off('mouseover');
				nav.find('li .dd-toggle').off('click');
				$('body').off('mouseover');
			}

			// defines top level items
			parentItems = nav.find('> ul > li');

			var setTriggers = function() {
				// $(parentItems).each(function() {
				// 	if( $(this).hasClass('mega') ) {
				// 		// mega dropdown
				// 		$(this).on('mouseenter', function(){
				// 			$(this).find('ul').first().stop(true, true).slideDown(settings.openingSpeed);
				// 		});
				// 		$(this).on('mouseleave', function(){
				// 			$(this).find('ul').first().stop(true, true).slideUp(settings.openingSpeed);
				// 		});
				// 	} else {
				// 		// normal dropdown
				// 		// first-level
				// 		$(this).on('mouseenter', function(){
				// 			$('.li-active').removeClass('li-active');
				// 			$(this).addClass('li-active');
				// 			$(this).children('ul').stop(true, true).slideDown(settings.openingSpeed);
				// 		});
				// 		$(this).on('mouseleave', function(){
				// 			$(this).children('ul').stop(true, true).delay(settings.closingDelay).slideUp(settings.openingSpeed);
				// 		});

				// 		// second level and below
				// 		$(this).find('>ul>li').on('mouseenter', function(){
				// 			$('.sub-li-active').removeClass('sub-li-active');
				// 			if ($(this).hasClass('has-sub')){
				// 				$(this).addClass('sub-li-active');
				// 			}
				// 		});
				// 		$(this).find('li.has-sub').on('mouseenter', function(){
				// 			$(this).children('ul').stop(true, true).slideDown(settings.openingSpeed);
				// 		});
				// 		$(this).find('li.has-sub').on('mouseleave', function(){
				// 			$(this).children('ul').stop(true, true).delay(settings.closingDelay).slideUp(settings.openingSpeed);
				// 		});
				// 	}
				// });

				// opens and closes menu
				var triggerAction = isDesktop ? 'mouseover click' : 'click';
				var willExpandAll = (mobileAndTabletcheck() && $(window).width() > breakpoint) || isDesktop;
				var onTriggerMenu = function(e, elm){
					e.preventDefault();

					var willTriggerAction = isDesktop ? !nav.hasClass('active') : true;
					if (willTriggerAction){
						if (isDesktop){
							elm.addClass('overActive');
						}
						elm.addClass('opened');
						// if nav position is left or right, uses fadeToggle instead of slideToggle
						if (settings.position == 'left' || settings.position == 'right') {
							nav.find('ul:first').stop(true, true).fadeToggle(settings.openingSpeed);
							nav.toggleClass('active');

							if(nav.hasClass('active') && nav.hasClass('mobile')) {
								// closes the menu when clicked outside of it
								$(document).on('click', function(event) {
									// ensures menu hides only on mobile nav
									if(nav.hasClass('mobile')) {
									  	if (!$(event.target).closest(nav).length) {
									  		nav.find('ul:first').stop(true, true).fadeOut(settings.openingSpeed);
									  		nav.removeClass('active');
										}
									}
								});
							}

						} else {
							// static position - normal open and close animation
							nav.find('ul:first').stop(true, true).slideToggle(settings.openingSpeed);
							nav.toggleClass('active');
							if(willExpandAll && nav.hasClass('active')){
								nav.find('ul:first li.has-sub:visible:first > .dd-toggle').trigger(isDesktop ? 'mouseover' : 'click');
							}
							if (!nav.hasClass('active')){
								nav.find('li.has-sub.open ul').hide();
								nav.find('li.has-sub.open').removeClass('open');
							}
						}

						if (isDesktop){
							$(nav).find('ul.level1 > li > .dd-toggle').each(function(){
								var parentHeight = $(this).parent('li').height();
								$(this).css('height', parentHeight);
								$(this).css('margin-top', -1 * parentHeight + 'px');
							});
						}

						$('body').toggleClass('menu-opened');
					}
				};

				if (isDesktop){
					$('.menu-toggle, .stellarnav-open').hoverIntent({
						over: function(e) {
							if ($(this).hasClass('overActive')){
								return;
							}
							onTriggerMenu(e, $(this));
						},
						out: function(e) {
							$(this).removeClass('overActive');
						},
					});
					$('.menu-toggle').on('click', function(e){
						if(isDesktop){
							if (nav.hasClass('active') && $(this).hasClass('opened')){
								nav.find('ul:first').stop(true, true).slideToggle(settings.openingSpeed);
								nav.removeClass('active');
								nav.find('li.has-sub.open ul').hide();
								nav.find('li.has-sub.open').removeClass('open');
								$('body').toggleClass('menu-opened');
							} else {
								onTriggerMenu(e, $(this));
							}
						} 
					});
					$('body').on('mouseover', function(e){
						if ($(e.target).hasClass('menu-overlay') && $(this).hasClass('menu-opened')){
							$('.menu-toggle').trigger('click');
						}
					});
				} else {
					$('.menu-toggle, .stellarnav-open').on('click', function(e) {
						onTriggerMenu(e, $(this));
					});
				}

				// activates the close button
				$('.close-menu, .stellarnav-close').on('click', function() {
					setTimeout(function(){
						nav.removeClass('active');

					}, 500);

					if (settings.position == 'left' || settings.position == 'right') {
						nav.find('ul:first').stop(true, true).fadeToggle(settings.openingSpeed);
					} else {
						nav.find('ul:first').stop(true, true).slideUp(settings.openingSpeed).toggleClass('active');
					}
				});

				// expands the dropdown menu on each click
				nav.find('li .dd-toggle').on(triggerAction, function(e) {
					e.preventDefault();
					var parentLi = $(this).parent('li');
					if (isDesktop && $(parentLi).hasClass('open')){
						return;
					}
					if (willExpandAll){
						$(parentLi).siblings().each(function(){
							if ($(this).hasClass('open')){
								$(this).find('ul').hide();
								$(this).find('li').removeClass('open');
								$(this).removeClass('open');
							}
						});
					}
					$(parentLi).children('ul').stop(true, true).slideToggle(settings.openingSpeed);
					$(parentLi).toggleClass('open');

					if (isDesktop){
						$(parentLi).find('li .dd-toggle').each(function(){
							var parentHeight = $(this).parent('li').height();
							$(this).css('height', parentHeight);
							$(this).css('margin-top', -1 * parentHeight + 'px');
						});
					}

					//auto open all menu
					if (willExpandAll && $(parentLi).closest('ul').hasClass('level1')){
						var nextLevelLi = $(parentLi).find('ul li.has-sub');
						if (nextLevelLi.length){
							$(nextLevelLi).first().children('ul').stop(true, true).slideToggle(settings.openingSpeed);
							$(nextLevelLi).first().toggleClass('open');
						}
					}
				});
				if (isDesktop){
					nav.find('li').on(triggerAction, function(e) {
						if (!$(this).hasClass('has-sub')){
							$(this).siblings().each(function(){
								if ($(this).hasClass('open')){
									$(this).find('ul').hide();
									$(this).find('li').removeClass('open');
									$(this).removeClass('open');
								}
							});
						}
					});
				}
			}

			// check browser width in real-time
			var windowCheck = debounce(function() {
				var browserWidth = $(window).width();
				isDesktop = (browserWidth <= breakpoint || mobileAndTabletcheck()) ? false : true;
				if(browserWidth <= breakpoint || settings.mobileMode) {
					// mobile/tablet nav

					resetTriggers();
					nav.addClass('mobile');
					nav.removeClass('desktop');
					if (browserWidth > breakpoint){
						nav.addClass('view-desktop');
					} else {
						nav.removeClass('view-desktop');
					}

					// closes the menu when resizing window back to desktop
					if( !nav.hasClass('active') && nav.find('ul:first').is(':visible') ) {
						nav.find('ul:first').hide();
					}

					// resets all the styles back to normal that are added on the desktop for the mega dropdown
					nav.find('li.mega').each(function() {
						$(this).find('ul').first().removeAttr('style');
						$(this).find('ul').first().children().removeAttr('style');
					});
					setTimeout(function() {setTriggers();}, 10);
						

				} else {
					// desktop nav
					nav.addClass('desktop');
					nav.removeClass('mobile');

					// ensures stellarnav is visible after resizing window
					if( !nav.hasClass('active') && nav.find('ul:first').is(':hidden') ) {
						nav.find('ul:first').show();
					}

					// hides items that were open on mobile
					$('li.open').removeClass('open').find('ul:visible').hide();

					resetTriggers();
					setTriggers();

					// mega dropdown
					navWidth = 0;

					$(parentItems).each(function() {
			    	// calculates the nav width based on the sum of all top-level items
			    	navWidth += $(this)[0].getBoundingClientRect().width;
						navWidth = Math.round(navWidth);

						if($(this).hasClass('mega')) {
							// left aligns mega dropdown with nav
							$(this).find('ul').first().css({'left': 0, 'right': 0, 'margin': '0px auto'});

							// gets the data-column attribute and divides the columns equally
							numCols = $(this).attr('data-columns');
							if(numCols==2) {
								$(this).find('li.has-sub').width('50%');
							} else if (numCols==3) {
								$(this).find('ul').first().children().width('33.33%');
							} else if (numCols==4) {
								$(this).find('ul').first().children().width('25%');
							} else if (numCols==5) {
								$(this).find('ul').first().children().width('20%');
							} else if (numCols==6) {
								$(this).find('ul').first().children().width('16.66%');
							} else if (numCols==7) {
								$(this).find('ul').first().children().width('14.28%');
							} else if (numCols==8) {
								$(this).find('ul').first().children().width('12.5%');
							} else {
								// defaults to 4 column
								$(this).find('ul').first().children().width('25%');
							}
						}

					});

					// defines the mega dropdown width to be the same as nav width
					if(parentItems.hasClass('mega')) {
						nav.find('li.mega > ul').css({'max-width':navWidth});
					}
					// end mega dropdown

				} // end desktop nav

				if (nav.hasClass('view-desktop')){
					var minHeight = 0, liHeight=52, subLiHeight=39;
					nav.find('ul').each(function() {
						var isSubLi = $(this).parent('.mega-menu.clearfix').length;
						var numOfLi = $(this).children('li').length;
						var liType = isSubLi ? subLiHeight : liHeight;
						var padding = isSubLi ? 10 : 0;
						var height = numOfLi * liType + padding;
						minHeight = height > minHeight ? height : minHeight;
					});
					nav.find('ul').css('min-height', minHeight+'px');
				} else {
					nav.find('ul').css('min-height', 0+'px');
				}

			}, 200); // windowCheck()

			windowCheck();


			// adds toggle button to li items that have children
			nav.find('li a').each(function() {
				if ($(this).next().length > 0) {
					$(this).parent('li').addClass('has-sub').append('<a class="dd-toggle" href="#"><span class="icon-plus"></span></a>');
				}
			});

			$(window).on('resize', function() {
				windowCheck();
			});
		});
	}
}(jQuery));
